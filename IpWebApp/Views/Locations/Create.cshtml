@model IpWebApp.Models.Location

@{ ViewBag.Title = "Create"; }
<link rel="stylesheet" href="~/Content/create-page.css">
<link rel="stylesheet" href="~/Content/edit-create-pages.css">

<h2>Create</h2>

@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Location</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.LocationId, "Client's name", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("LocationId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        Country Name:
                        <div class="col-md-10">
                            <input name="PriorityCountry" type="text" class="form-control" id="PriorityCountry" placeholder="" value="@Html.DisplayFor(model => model.PriorityCountry)">
                            @Html.ValidationMessageFor(model => model.PriorityCountry, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="form-submit d-flex justify-content-center">
                            <input type="submit" value="Create" class="btn-submit" />
                        </div>
                    </div>
                </div>}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#PriorityCountry").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Record/GetCountriesByPrefix",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.CountryName, value: item.CountryName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });

        $("#PriorityCountry").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Record/GetCountriesByPrefix",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.CountryName, value: item.CountryName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })</script>