@model IpWebApp.Models.Client

@{
    ViewBag.Title = "Create";
}

    <link rel="stylesheet" href="~/Content/create-page.css">
    <link rel="stylesheet" href="~/Content/edit-create-pages.css">

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <main class="container">

        <div class="row">
            <div class="back">
                <a href="@Url.Action("Index", "Client", "Client")">< Clients</a>
            </div>
        </div>
        <div class="row justify-content-center">
            <h2 class="heading">Create New Client</h2>
        </div>

        <div class="row justify-content-center">
            <div class="form-panel-create">
                <form id="add-client-form">
                    <div class="row">


                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="col-6">

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "clientName" })
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.ContactName, htmlAttributes: new { @class = "contactName" })
                                @Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger" })
                            </div>



                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.BillingName)
                                @Html.EditorFor(model => model.BillingName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BillingName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label" })
                                <div class="select-wrapper col">
                                    @Html.EnumDropDownListFor(model => model.Currency, htmlAttributes: new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Balance)
                                @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                                @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                            </div>


                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.Referent)
                                @Html.EditorFor(model => model.Referent, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Referent, "", new { @class = "text-danger" })
                            </div>


                        </div>

                        <div class="col-6 second-col-wrapper">
                            <div class="form-group">
                                @Html.LabelFor(model => model.VatNumber)
                                @Html.EditorFor(model => model.VatNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.VatNumber, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ContactEmail, htmlAttributes: new { @class = "billingContactName" })
                                @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ContactPosition, htmlAttributes: new { @class = "billingContactName" })
                                @Html.EditorFor(model => model.ContactPosition, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContactPosition, "", new { @class = "text-danger" })
                            </div>


                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.BillingEmail)
                                @Html.EditorFor(model => model.BillingEmail, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BillingEmail, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "billingContactName" })
                                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                            </div>




                        </div>
                        <div class="form-group">
                            <div class="form-submit d-flex justify-content-center">
                                <input type="submit" value="Create" class="btn-submit" />


                            </div>
                        </div>
                    </div>

                </form>

            </div>
        </div>

    </main>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
