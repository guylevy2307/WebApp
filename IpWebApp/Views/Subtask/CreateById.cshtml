@model IpWebApp.Models.Subtask

@{
    ViewBag.Title = "CreateById";

}

<link rel="stylesheet" href="~/Content/create-page.css">
<link rel="stylesheet" href="~/Content/edit-create-pages.css">


@using (Html.BeginForm("Create", "Subtask", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <main class="container">

        <div class="row">
            <div class="back">
                <a href="@Url.Action("Index", "Task", "Task")">< Tasks</a>
            </div>
        </div>
        <div class="row justify-content-center">
            <h2 class="heading">Create New Subtask</h2>
        </div>

    <div class="row justify-content-center">
        <div class="form-panel-create">
            <form id="add-task-form">
                <div class="row">
                    <div class="col-12">


                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">

                            <div class="col-6">
                                <div class="form-group">
                                    <label>Record Name:</label>
                                    <input name="client-name" disabled type="text" class="form-control" id="client-name" value="@ViewData["taskName"]">
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Title)
                                <input type="text" class="form-control" id="taskSelect" name="Title" autocomplete="off">
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group d-flex align-items-center">
                            <div class="subtask-checkbox d-flex align-items-center">
                                <input name="create-subtask" type="checkbox" id="create-subtask" checked>
                                <label class="for-checkbox" for="create-subtask">Create Subtask</label>
                            </div>
                            <div class="select-wrapper col">
                                @Html.DropDownList("MainTaskId", (IEnumerable<SelectListItem>)ViewBag.TaskId, null, new { @class = "form-control" })
                            </div>
                            <div class="col">

                            </div>

                               
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Description)
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "description", @id = "description", @name = "description" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="col-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Deadline)

                            <input name="deadline" type="date" class="form-control w-100" id="deadline" placeholder="DD / MM / YYYY" value="@Html.DisplayFor(model => model.Deadline)">
                            @Html.ValidationMessageFor(model => model.Deadline, "", new { @class = "text-danger" })

                        </div>
                        <!--
                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                            <div class="select-wrapper col">


                                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })

                            </div>
                        </div> -->
                    </div>
                    <input name="creatorId" type="text"  id="creatorId" value=@User.Identity.Name hidden>

                    <div class="col-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Pricing)
                            <input name="Pricing" type="text" class="form-control w-100" id="Pricing"  value="@Html.DisplayFor(model => model.Pricing)">
                            @Html.ValidationMessageFor(model => model.Pricing, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-submit d-flex justify-content-center">
                        <button class="btn-submit" type="submit">Create</button>
                    </div>

                </div>
            </form>
        </div>
    </div>
    </main>
}
    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
    <script src="//code.jquery.com/jquery-1.10.2.js"></script>
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

    <script>
        $(document).ready(function () {
            $(".EnterDate").datepicker({
                dateFormat: "dd/mm/yy",
                changemonth: true,
                changeyear: true
            });
        });
    </script>
    <script type="text/javascript">
        $(function findTask() {
            $("#taskSelect").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Task/AutoCompleteTamplateTask/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                $('#description').val(item.mission);
                            
                                $('#Pricing').val(item.price);
                                return item.title;
                                
                            }))
                        }
                    });
                }
            }).focus(function () {
                $(this).autocomplete("search");
            });
        });
    </script> 

